/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.TransaksiController;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rhnfa
 */
public class MenuTransaksi extends javax.swing.JFrame {
private TransaksiController transaksiController; // Deklarasi variabel untuk mengelola data transaksi
private List<String[]> daftarBarang; // Deklarasi list untuk menyimpan data barang
    /**
     * Creates new form MenuTransaksi
     */
    public MenuTransaksi() {
        initComponents();
        populateComboBarang(); // Mengisi combo box dengan daftar barang
        transaksiController = new TransaksiController(this); // Membuat TransaksiController dan menghubungkannya dengan MenuTransaksi
        transaksiController.loadTransaksiData(); // Memuat data transaksi saat menu transaksi ditampilkan
    }
      public void showError(String message) {
        // Menampilkan pesan kesalahan dalam dialog
        JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    
    public void updateTransaksiTabel(List<String[]> daftarTransaksi) {
        DefaultTableModel model = (DefaultTableModel) tabelTransaksi.getModel(); // Mendapatkan model tabel transaksi
        model.setRowCount(0); // Menghapus semua baris yang ada di tabel

        for (String[] transaksi : daftarTransaksi) {
            model.addRow(transaksi);  // Menambahkan baris baru untuk setiap transaksi
        }
    }
    
    // Mengisi comboBarang dari transaksiController
    private void populateComboBarang() {
        transaksiController = new TransaksiController(this); // Membuat instance baru dari TransaksiController
        List<String[]> daftarBarang = transaksiController.getNamaDanId(); // Mengambil daftar nama dan ID barang dari transaksiController
        comboBarang.removeAllItems();  // Menghapus semua item yang ada di combo box
        comboBarang.addItem("-- Pilih Barang --");  // Menambahkan item default ke combo box
        for (String[] barang : daftarBarang) {
            comboBarang.addItem(barang[1]);   // Menambahkan nama barang ke combo box
        }
        
        this.daftarBarang = daftarBarang;  // Menyimpan daftar barang ke variabel instance
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboBarang = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        radioKeluar = new javax.swing.JRadioButton();
        radioMasuk = new javax.swing.JRadioButton();
        spinnerJumlah = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelTransaksi = new javax.swing.JTable();
        btnSimpan = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuHome = new javax.swing.JMenu();
        menuStok = new javax.swing.JMenu();
        menuBarang = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Inventori || Transaksi");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Transaksi", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informasi Transaksi", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel1.setText("Barang");

        comboBarang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Pilih Barang --" }));

        jLabel2.setText("Jenis Transaksi");

        jLabel3.setText("Jumlah Barang");

        buttonGroup1.add(radioKeluar);
        radioKeluar.setText("Keluar");

        buttonGroup1.add(radioMasuk);
        radioMasuk.setText("Masuk");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioMasuk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(radioKeluar)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioKeluar)
                    .addComponent(radioMasuk))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        spinnerJumlah.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9999, 1));

        tabelTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nama Barang", "Jenis Transaksi", "Jumlah Barang", "Tanggal Transaksi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelTransaksiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelTransaksi);

        btnSimpan.setText("SIMPAN");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUbah.setText("UBAH");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setText("HAPUS");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(comboBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(spinnerJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnSimpan)
                        .addGap(18, 18, 18)
                        .addComponent(btnUbah)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapus)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(spinnerJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        menuHome.setText("Home");
        menuHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuHomeMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuHome);

        menuStok.setText("Stok");
        menuStok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuStokMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuStok);

        menuBarang.setText("Barang");
        menuBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBarangMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuBarang);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        int id_stok = -1; // Inisialisasi ID stok dengan nilai tidak valid
        String namaBarang = (String) comboBarang.getSelectedItem(); // Mengambil nama barang yang dipilih dari combo box
        // Mencari ID stok berdasarkan nama barang
        for (String[] barang : daftarBarang) {
            if (barang[1].equals(namaBarang)) {
                id_stok = Integer.parseInt(barang[0]); // Mengambil ID stok
                break;
            }
        }
        // Mendapatkan jenis transaksi dari radio button
        String jenis_transaksi = radioKeluar.isSelected() ? "Keluar" : "Masuk";
        // Mendapatkan jumlah barang dari spinner
        int jumlah_barang = (Integer) spinnerJumlah.getValue();
        // Memanggil metode untuk menambah transaksi
        if (id_stok != -1) { // Pastikan ID stok valid
            transaksiController.tambahTransaksi(id_stok, jenis_transaksi, jumlah_barang);
            // Reset form setelah menyimpan
            comboBarang.setSelectedIndex(0); // Mengatur combo box ke item default
            spinnerJumlah.setValue(1); // Mengatur spinner ke nilai default
            buttonGroup1.clearSelection();
        } else {
            // Menampilkan pesan kesalahan jika tidak ada barang yang dipilih
           JOptionPane.showMessageDialog(this, "Silakan pilih barang terlebih dahulu.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelTransaksi.getSelectedRow();
        if (selectedRow >= 0) { // Pastikan ada baris yang dipilih
            // Mengambil ID transaksi dari tabel
            String idTransaksiString = (String) tabelTransaksi.getValueAt(selectedRow, 0); // ID transaksi berada di kolom pertama
            int id_transaksi = Integer.parseInt(idTransaksiString);
            // Mendapatkan ID barang yang dipilih dari combo box
            int id_stok = -1; // Inisialisasi dengan nilai yang tidak valid
            String namaBarang = (String) comboBarang.getSelectedItem();
            // Mencari ID stok berdasarkan nama barang
            for (String[] barang : daftarBarang) {
                if (barang[1].equals(namaBarang)) {
                    id_stok = Integer.parseInt(barang[0]); // Mengambil ID stok
                    break;
                }
            }
            // Mendapatkan jenis transaksi dari radio button
            String jenis_transaksi = radioKeluar.isSelected() ? "Keluar" : "Masuk";
            // Mendapatkan jumlah barang dari spinner
            int jumlah_barang = (Integer) spinnerJumlah.getValue();
            // Memanggil metode untuk memperbarui transaksi
            if (id_stok != -1) { // Pastikan ID stok valid
                transaksiController.updateTransaksi(id_transaksi, id_stok, jenis_transaksi, jumlah_barang); // Memanggil metode untuk update 
                // Reset form setelah mengubah
                comboBarang.setSelectedIndex(0); // Mengatur combo box ke item default
                spinnerJumlah.setValue(1); // Mengatur spinner ke nilai default
                buttonGroup1.clearSelection(); // Menghapus pilihan radio button
            } else {
                // Menampilkan pesan kesalahan jika tidak ada barang yang dipilih
              JOptionPane.showMessageDialog(this, "Silakan pilih barang terlebih dahulu.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Menampilkan pesan kesalahan jika tidak ada baris yang dipilih
           JOptionPane.showMessageDialog(this, "Silakan pilih transaksi yang ingin diubah.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelTransaksi.getSelectedRow(); // Mengambil baris yang dipilih dari tabel transaksi
        if (selectedRow != -1) { // Pastikan ada baris yang dipilih
            String idTransaksiString = (String) tabelTransaksi.getValueAt(selectedRow, 0);
            int idTransaksi = Integer.parseInt(idTransaksiString);
            // Menampilkan dialog konfirmasi
            int confirm = JOptionPane.showConfirmDialog(this, 
                "Apakah Anda yakin ingin menghapus transaksi ini?", 
                "Konfirmasi Hapus", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE);
            // Jika pengguna memilih "Ya"
            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    transaksiController.hapusTransaksi(idTransaksi); // Memanggil metode untuk menghapus 
                    JOptionPane.showMessageDialog(this, "Transaksi berhasil dihapus.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    comboBarang.setSelectedIndex(0);  // Mengatur combo box ke item default
                    spinnerJumlah.setValue(1);  // Mengatur spinner ke nilai default
                    buttonGroup1.clearSelection(); // Menghapus pilihan radio button
                } catch (Exception e) {
                    showError("Gagal menghapus barang: " + e.getMessage());
                }
            }
        } else {
            showError("Silakan pilih barang yang ingin dihapus.");
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void tabelTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelTransaksiMouseClicked
        // TODO add your handling code here:
        int selectedRow = tabelTransaksi.getSelectedRow();
        if (selectedRow >= 0) { // Pastikan ada baris yang dipilih
            // Mengambil data dari baris yang dipilih
            String idTransaksiString = (String) tabelTransaksi.getValueAt(selectedRow, 0); // ID transaksi berada di kolom pertama
            String namaBarang = (String) tabelTransaksi.getValueAt(selectedRow, 1); // Nama barang berada di kolom kedua
            String jenisTransaksi = (String) tabelTransaksi.getValueAt(selectedRow, 2); // Jenis transaksi berada di kolom ketiga
            String jumlahBarangString = (String) tabelTransaksi.getValueAt(selectedRow, 3); // Jumlah barang berada di kolom keempat

            // Mengisi form dengan data yang dipilih
            for (String[] barang : daftarBarang) {
                if (barang[1].equals(namaBarang)) {
                    comboBarang.setSelectedItem(namaBarang); // Mengatur combo box ke nama barang yang dipilih
                    break;
                }
            }
            spinnerJumlah.setValue(Integer.parseInt(jumlahBarangString)); // Mengatur spinner ke jumlah barang yang dipilih
            // Mengatur radio button berdasarkan jenis transaksi
            if ("Keluar".equals(jenisTransaksi)) {
                radioKeluar.setSelected(true);
            } else {
                radioMasuk.setSelected(true);
            }
        }   
    }//GEN-LAST:event_tabelTransaksiMouseClicked

    private void menuStokMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuStokMouseClicked
        // TODO add your handling code here:
        // Membuka form MenuStok dan menutup form saat ini.
        new MenuStok().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuStokMouseClicked

    private void menuBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBarangMouseClicked
        // TODO add your handling code here:
        // Membuka form MenuBarang dan menutup form saat ini.
        new MenuBarang().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuBarangMouseClicked

    private void menuHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuHomeMouseClicked
        // TODO add your handling code here:
        // Membuka form MenuHome dan menutup form saat ini.
        new MenuUtama().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuHomeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuTransaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboBarang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuBarang;
    private javax.swing.JMenu menuHome;
    private javax.swing.JMenu menuStok;
    private javax.swing.JRadioButton radioKeluar;
    private javax.swing.JRadioButton radioMasuk;
    private javax.swing.JSpinner spinnerJumlah;
    private javax.swing.JTable tabelTransaksi;
    // End of variables declaration//GEN-END:variables
}
