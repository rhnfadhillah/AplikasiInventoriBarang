
package View;

import Controller.StokController;
import Model.BarangHelper;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MenuStok extends javax.swing.JFrame {
private StokController stokController;
    public MenuStok() {
        initComponents();
        // Memanggil controller untuk mengatur data barang.
        stokController = new StokController(this);
        
        // Memuat data barang ke tabel saat menu barang dibuat.
        stokController.loadStokData();
    }
    
    public void updateStokTable(List<Object[]> daftarStok) {
        DefaultTableModel model = (DefaultTableModel) tableStok.getModel(); // Mendapatkan model tabel.
        model.setRowCount(0); // Menghapus semua baris di tabel sebelum memuat data baru
        for (Object[] stok : daftarStok) {
            model.addRow(stok); // Menambahkan setiap baris data stok ke model tabel.
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableStok = new javax.swing.JTable();
        btnImport = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuHome = new javax.swing.JMenu();
        menuTransaksi = new javax.swing.JMenu();
        menuBarang = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Inventori Barang || Stok");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stok Barang", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N

        tableStok.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nama Barang", "Stok"
            }
        ));
        jScrollPane1.setViewportView(tableStok);

        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnExport.setText("Export");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(176, Short.MAX_VALUE)
                .addComponent(btnExport)
                .addGap(150, 150, 150)
                .addComponent(btnImport)
                .addGap(182, 182, 182))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImport)
                    .addComponent(btnExport))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        menuHome.setText("Home");
        menuHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuHomeMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuHome);

        menuTransaksi.setText("Transaksi");
        menuTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuTransaksiMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuTransaksi);

        menuBarang.setText("Barang");
        menuBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBarangMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuBarang);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBarangMouseClicked
        // TODO add your handling code here:
        // Membuka form MenuBarang dan menutup form saat ini.
        new MenuBarang().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuBarangMouseClicked

    private void menuTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTransaksiMouseClicked
        // TODO add your handling code here:
        // Membuka form MenuTransaksi dan menutup form saat ini.
        new MenuTransaksi().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuTransaksiMouseClicked

    private void menuHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuHomeMouseClicked
        // TODO add your handling code here:
        // Membuka form MenuHome dan menutup form saat ini.
        new MenuUtama().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuHomeMouseClicked

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        // Mendapatkan model dari tabel
        DefaultTableModel model = (DefaultTableModel) tableStok.getModel();
        // Menentukan jalur untuk file CSV
        String filePath = "stok.csv"; // Anda bisa mengubah jalur ini sesuai kebutuhan
        try (PrintWriter writer = new PrintWriter(new File(filePath))) {
            // Menulis header
            for (int i = 0; i < model.getColumnCount(); i++) {
                writer.print(model.getColumnName(i));
                if (i < model.getColumnCount() - 1) {
                    writer.print(",");
                }
            }
            writer.println();
            // Menulis data baris
            for (int i = 0; i < model.getRowCount(); i++) {
                for (int j = 0; j < model.getColumnCount(); j++) {
                    writer.print(model.getValueAt(i, j));
                    if (j < model.getColumnCount() - 1) {
                        writer.print(",");
                    }
                }
                writer.println();
            }
            JOptionPane.showMessageDialog(this, "Data berhasil diekspor ke " + filePath);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengekspor data: " + e.getMessage());
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
        // Menentukan jalur untuk file CSV
        String filePath = "stok.csv"; // Anda bisa mengubah jalur ini sesuai kebutuhan
        try (BufferedReader reader = new BufferedReader(new FileReader(filePath))) {
        String line;
        reader.readLine(); // Lewati baris header
        while ((line = reader.readLine()) != null) {
            String[] data = line.split(","); // Memisahkan data berdasarkan koma
            if (data.length == 2) { // Pastikan ada dua kolom (Nama Barang dan Stok)
                String namaBarang = data[0].trim(); // Menghapus spasi di awal dan akhir
                String jumlah_stok = data[1].trim(); // Menghapus spasi di awal dan akhir
                int stok = Integer.parseInt(jumlah_stok);
                // Memeriksa apakah barang sudah ada
                BarangHelper barangHelper = new BarangHelper();
                if (barangHelper.barangExists(namaBarang)) {
                    JOptionPane.showMessageDialog(this, "Barang dengan nama '" + namaBarang + "' sudah ada. Barang ini akan diabaikan.", "Duplikat Ditemukan", JOptionPane.WARNING_MESSAGE);
                } else {
                    // Menambahkan barang jika belum ada
                    barangHelper.cekDanTambahBarang(namaBarang, stok);
                }
            }
        }
        // Setelah import, muat ulang data dari database ke tabel
        stokController.loadStokData();
        JOptionPane.showMessageDialog(this, "Data berhasil diimpor dari " + filePath, "Sukses", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mengimpor data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnImportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuStok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuStok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuStok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuStok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuStok().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuBarang;
    private javax.swing.JMenu menuHome;
    private javax.swing.JMenu menuTransaksi;
    private javax.swing.JTable tableStok;
    // End of variables declaration//GEN-END:variables
}
