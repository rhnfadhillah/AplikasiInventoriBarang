/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;


import Controller.BarangController;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rhnfa
 */
public class MenuBarang extends javax.swing.JFrame {
private BarangController barangController; // Deklarasi variabel barangController untuk mengelola data barang
    /**
     * Creates new form MenuBarang
     */
    public MenuBarang() {
        initComponents();
        
        // Memanggil controller untuk mengatur data barang.
        barangController = new BarangController(this);
        
        // Memuat data barang ke tabel saat menu barang dibuat.
        barangController.loadBarangData();
            
        tableBarang.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                int selectedRow = tableBarang.getSelectedRow(); // Mendapatkan indeks baris yang diklik.
                if (selectedRow != -1) { // Jika baris valid dipilih.
                // Mengambil data dari baris yang dipilih berdasarkan indeks kolom.
                String idBarangString = (String) tableBarang.getValueAt(selectedRow, 0); 
                int idBarang = Integer.parseInt(idBarangString); // Mengubah ID barang menjadi integer.
                String namaBarang = (String) tableBarang.getValueAt(selectedRow, 1);
                String jenisBarang = (String) tableBarang.getValueAt(selectedRow, 2);
                
                // Mengisi field nama dan jenis barang di GUI berdasarkan data tabel.
                txtNama.setText(namaBarang);
                comboJenis.setSelectedItem(jenisBarang);
                }
            }
        });
    }
    
    // Method untuk melakukan update tabel barang
   public void updateBarangTable(List<String[]> daftarBarang) {
        DefaultTableModel model = (DefaultTableModel) tableBarang.getModel(); // Mendapatkan model tabel.
        model.setRowCount(0); // Menghapus semua baris di tabel sebelum memuat data baru.

        for (String[] barang : daftarBarang) {
            model.addRow(barang);  // Menambahkan setiap baris data barang ke model tabel.
        }
    }
   
   // Method untuk menampilkan pesan error
   public void showError(String message) {
        JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
    }
   
   
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBarang = new javax.swing.JTable();
        txtNama = new javax.swing.JTextField();
        comboJenis = new javax.swing.JComboBox<>();
        btnSimpan = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuHome = new javax.swing.JMenu();
        menuStok = new javax.swing.JMenu();
        menuTransaksi = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Inventori Barang || Barang");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Barang", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24))); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informasi Barang", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel1.setText("Nama Barang");

        jLabel2.setText("Jenis Barang");

        tableBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nama Barang", "Jenis Barang"
            }
        ));
        jScrollPane1.setViewportView(tableBarang);

        comboJenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Jenis Barang", "Packaging", "Bahan Baku", "Alat Makan", "Perlengkapan" }));

        btnSimpan.setText("SIMPAN");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUbah.setText("UBAH");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setText("HAPUS");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnSimpan)
                        .addGap(18, 18, 18)
                        .addComponent(btnUbah)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapus)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuHome.setText("Home");
        menuHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuHomeMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuHome);

        menuStok.setText("Stok");
        menuStok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuStokMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuStok);

        menuTransaksi.setText("Transaksi");
        menuTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuTransaksiMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuTransaksi);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        String namaBarang = txtNama.getText(); // Mengambil input nama barang dari field.
        String jenisBarang = (String) comboJenis.getSelectedItem(); // Mengambil input jenis barang dari combo box.

        // Validasi apakah nama barang dan jenis barang sudah diisi.
        if (!namaBarang.isEmpty() && !jenisBarang.equals("Pilih Jenis Barang")) {
            try {
                // Menyimpan barang baru melalui controller.
                barangController.tambahBarang(namaBarang, jenisBarang);
                JOptionPane.showMessageDialog(this, "Barang berhasil disimpan.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                
                // Mengosongkan field input setelah menyimpan.
                txtNama.setText("");
                comboJenis.setSelectedIndex(0);
            } catch (Exception e) {
                showError("Gagal menyimpan barang: " + e.getMessage());  // Menampilkan pesan error jika gagal.
            }
        } else {
            showError("Nama barang dan jenis barang harus diisi!"); // Menampilkan error jika validasi gagal.
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableBarang.getSelectedRow();  // Mendapatkan baris yang dipilih.

        if (selectedRow != -1) { // Jika ada baris yang dipilih.
            
            // Mengambil data baru dari field input.
            String namaBarangBaru = txtNama.getText();
            String jenisBarangBaru = (String) comboJenis.getSelectedItem();
            
            // Mengambil ID barang dari baris yang dipilih.
            String idBarangString = (String) tableBarang.getValueAt(selectedRow, 0);
            int idBarang = Integer.parseInt(idBarangString);
            // Validasi apakah input baru sudah diisi.
            if (!namaBarangBaru.isEmpty() && !jenisBarangBaru.equals("Pilih Jenis Barang")) {
                try {
                    // Mengupdate barang melalui controller.
                    barangController.updateBarang(idBarang, namaBarangBaru, jenisBarangBaru);
                    JOptionPane.showMessageDialog(this, "Barang berhasil diubah.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    // Mengosongkan field input setelah mengubah.
                    txtNama.setText("");
                    comboJenis.setSelectedIndex(0);
                } catch (Exception e) {
                    showError("Gagal mengubah barang: " + e.getMessage()); // Menampilkan pesan error jika gagal.
                }
            } else {
                showError("Nama barang dan jenis barang harus diisi!"); // Menampilkan error jika validasi gagal.
            }
        } else {
            showError("Silakan pilih barang yang ingin diubah."); // Menampilkan error jika tidak ada baris yang dipilih.
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableBarang.getSelectedRow();  // Mendapatkan baris yang dipilih.

        if (selectedRow != -1) { // Jika ada baris yang dipilih.
            
            // Mengambil ID barang dari baris yang dipilih.
            String idBarangString = (String) tableBarang.getValueAt(selectedRow, 0);
            int idBarang = Integer.parseInt(idBarangString);
            // Konfirmasi penghapusan.
            int confirm = JOptionPane.showConfirmDialog(this, 
                "Apakah Anda yakin ingin menghapus barang ini?", 
                "Konfirmasi Hapus", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.QUESTION_MESSAGE);
            if (confirm == JOptionPane.YES_OPTION) {   // Jika pengguna mengonfirmasi.
                try {
                    // Menghapus barang melalui controller.
                    barangController.hapusBarang(idBarang);
                    JOptionPane.showMessageDialog(this, "Barang berhasil dihapus.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    
                    // Mengosongkan field input setelah menghapus.
                    txtNama.setText("");
                    comboJenis.setSelectedIndex(0);
                } catch (Exception e) {
                    showError("Gagal menghapus barang: " + e.getMessage());  // Menampilkan pesan error jika gagal.
                }
            }
        } else {
            showError("Silakan pilih barang yang ingin dihapus.");  // Menampilkan error jika tidak ada baris yang dipilih.
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void menuStokMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuStokMouseClicked
        // TODO add your handling code here:
        // Membuka form MenuStok dan menutup form saat ini.
        new MenuStok().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuStokMouseClicked

    private void menuTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTransaksiMouseClicked
        // TODO add your handling code here:
        // Membuka form MenuTransaksi dan menutup form saat ini.
        new MenuTransaksi().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuTransaksiMouseClicked

    private void menuHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuHomeMouseClicked
        // TODO add your handling code here:
        // Membuka form MenuHome dan menutup form saat ini.
        new MenuUtama().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuHomeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> comboJenis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuHome;
    private javax.swing.JMenu menuStok;
    private javax.swing.JMenu menuTransaksi;
    private javax.swing.JTable tableBarang;
    private javax.swing.JTextField txtNama;
    // End of variables declaration//GEN-END:variables
}
